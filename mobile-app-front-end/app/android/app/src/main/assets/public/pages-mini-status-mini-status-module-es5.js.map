{"version":3,"sources":["./src/app/pages/mini-status/mini-status.page.html","./src/app/pages/mini-status/mini-status.module.ts","./src/app/pages/mini-status/mini-status.page.scss","./src/app/pages/mini-status/mini-status.page.ts","./src/app/service/status.service.ts"],"names":[],"mappings":"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","file":"pages-mini-status-mini-status-module-es5.js","sourcesContent":["module.exports = \"<ion-app>\\n<ion-header>\\n  <ion-toolbar>\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-menu-button class=\\\"menu-icon\\\"></ion-menu-button>\\n    </ion-buttons>\\n    <ion-title class=\\\"large-text\\\">\\n      Status\\n    </ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n        <ion-list *ngIf=\\\"statusOfStatus === 'updated' \\\">\\n        <ion-list-header class=\\\"small-text\\\">\\n        Minima Node {{ \\\"v\\\"+status?.version }}\\n        </ion-list-header>\\n          <ion-item>\\n            <ion-icon name=\\\"checkmark-circle\\\" slot=\\\"start\\\" class=\\\"active-icons\\\"></ion-icon>\\n            <ion-label>\\n            <h2 class=\\\"medium-text\\\">Status</h2>\\n            <p *ngIf=\\\"status?.version\\\" class=\\\"status-on small-text\\\"> Online</p>\\n            <p *ngIf=\\\"!status?.version\\\" class=\\\"status-off small-text\\\"> Offline</p>\\n            </ion-label>\\n          </ion-item>\\n          <ion-item>\\n            <ion-icon name=\\\"checkmark-circle\\\" slot=\\\"start\\\" class=\\\"active-icons\\\"></ion-icon>\\n            <ion-label>\\n            <h2 class=\\\"medium-text\\\">Node Version</h2>\\n            <p class=\\\"small-text\\\">{{ \\\"v\\\"+status?.version }}</p>\\n            </ion-label>\\n          </ion-item>\\n          <ion-item>\\n            <ion-icon name=\\\"checkmark-circle\\\" slot=\\\"start\\\" class=\\\"active-icons\\\"></ion-icon>\\n            <ion-label>\\n            <h2 class=\\\"medium-text\\\">Node uptime</h2>\\n            <p class=\\\"small-text\\\">{{ status?.uptime.substring(0,51) }}</p>\\n            </ion-label>\\n          </ion-item>\\n          <ion-item>\\n            <ion-icon name=\\\"checkmark-circle\\\" slot=\\\"start\\\" class=\\\"active-icons\\\"></ion-icon>\\n            <ion-label>\\n            <h2 class=\\\"medium-text\\\">Configuration path</h2>\\n            <p class=\\\"small-text\\\">{{ status?.conf }}</p>\\n            </ion-label>\\n          </ion-item>\\n          <ion-item>\\n            <ion-icon name=\\\"checkmark-circle\\\" slot=\\\"start\\\" class=\\\"active-icons\\\"></ion-icon>\\n            <ion-label>\\n            <h2 class=\\\"medium-text\\\">Hosting IP</h2>\\n            <p class=\\\"small-text\\\">{{ status?.host +':' }}{{ status?.port }}</p>\\n            </ion-label>\\n          </ion-item>\\n          <ion-item>\\n            <ion-icon name=\\\"checkmark-circle\\\" slot=\\\"start\\\" class=\\\"active-icons\\\"></ion-icon>\\n            <ion-label>\\n            <h2 class=\\\"medium-text\\\">RPC Port</h2>\\n            <p class=\\\"small-text\\\">{{ status?.rpcport }}</p>\\n            </ion-label>\\n          </ion-item>\\n          <ion-item>\\n            <ion-icon name=\\\"checkmark-circle\\\" slot=\\\"start\\\" class=\\\"active-icons\\\"></ion-icon>\\n            <ion-label>\\n            <h2 class=\\\"medium-text\\\">Last block number</h2>\\n            <p class=\\\"small-text\\\">{{ status?.lastblock }}</p>\\n            </ion-label>\\n          </ion-item>\\n          <ion-item lines=\\\"none\\\">\\n            <ion-icon name=\\\"checkmark-circle\\\" slot=\\\"start\\\" class=\\\"active-icons\\\"></ion-icon>\\n            <ion-label>\\n            <h2 class=\\\"medium-text\\\">Last block time relayed</h2>\\n            <p class=\\\"small-text\\\"> {{ status?.lasttime.substring(4, 30) }}</p>\\n            </ion-label>\\n          </ion-item>\\n        </ion-list>\\n\\n        <!-- SKELETON UX FOR LOADING -->\\n        <div *ngIf=\\\"statusOfStatus === 'empty'\\\">\\n        <ion-list>\\n        <ion-list-header>\\n        Minima Node Version\\n        </ion-list-header>\\n          <ion-item>\\n            <ion-icon name=\\\"timer\\\" slot=\\\"start\\\" class=\\\"inactive-icons\\\"></ion-icon>\\n            <ion-label>\\n            <h2>Status</h2>\\n            <p> <ion-skeleton-text animated style=\\\"width: 50%\\\"></ion-skeleton-text></p>\\n            </ion-label>\\n          </ion-item>\\n          <ion-item>\\n            <ion-icon name=\\\"timer\\\" slot=\\\"start\\\" class=\\\"inactive-icons\\\"></ion-icon>\\n            <ion-label>\\n            <h2>Node Version</h2>\\n            <p> <ion-skeleton-text animated style=\\\"width: 50%\\\"></ion-skeleton-text></p>\\n            </ion-label>\\n          </ion-item>\\n          <ion-item>\\n            <ion-icon name=\\\"timer\\\" slot=\\\"start\\\" class=\\\"inactive-icons\\\"></ion-icon>\\n            <ion-label>\\n            <h2>Node uptime</h2>\\n            <p> <ion-skeleton-text animated style=\\\"width: 50%\\\"></ion-skeleton-text></p>\\n            <p> <ion-skeleton-text animated style=\\\"width: 25%\\\" [hidden]=\\\"checkPlatform()\\\" ></ion-skeleton-text></p>\\n            </ion-label>\\n          </ion-item>\\n          <ion-item>\\n            <ion-icon name=\\\"timer\\\" slot=\\\"start\\\" class=\\\"inactive-icons\\\"></ion-icon>\\n            <ion-label>\\n            <h2>Configuration path</h2>\\n            <p> <ion-skeleton-text animated style=\\\"width: 50%\\\"></ion-skeleton-text></p>\\n            </ion-label>\\n          </ion-item>\\n          <ion-item>\\n            <ion-icon name=\\\"timer\\\" slot=\\\"start\\\" class=\\\"inactive-icons\\\"></ion-icon>\\n            <ion-label>\\n            <h2>Hosting IP</h2>\\n            <p> <ion-skeleton-text animated style=\\\"width: 50%\\\"></ion-skeleton-text></p>\\n            </ion-label>\\n          </ion-item>\\n          <ion-item>\\n            <ion-icon name=\\\"timer\\\" slot=\\\"start\\\" class=\\\"inactive-icons\\\"></ion-icon>\\n            <ion-label>\\n            <h2>RPC Port</h2>\\n            <p> <ion-skeleton-text animated style=\\\"width: 50%\\\"></ion-skeleton-text></p>\\n            </ion-label>\\n          </ion-item>\\n          <ion-item>\\n            <ion-icon name=\\\"timer\\\" slot=\\\"start\\\" class=\\\"inactive-icons\\\"></ion-icon>\\n            <ion-label>\\n            <h2>Last block number</h2>\\n            <p> <ion-skeleton-text animated style=\\\"width: 50%\\\"></ion-skeleton-text></p>\\n            </ion-label>\\n          </ion-item>\\n          <ion-item lines=\\\"none\\\">\\n            <ion-icon name=\\\"timer\\\" slot=\\\"start\\\" class=\\\"inactive-icons\\\"></ion-icon>\\n            <ion-label>\\n            <h2>Last block time relayed</h2>\\n            <p> <ion-skeleton-text animated style=\\\"width: 50%\\\"></ion-skeleton-text></p>\\n            </ion-label>\\n          </ion-item>\\n        </ion-list>\\n        </div>\\n\\n</ion-content>\\n\\n<ion-footer>\\n     <ion-list lines=\\\"none\\\">\\n       <ion-item>\\n       <ion-icon slot=\\\"start\\\" name=\\\"notifications\\\"></ion-icon>\\n       <p class=\\\"medium-text\\\">Call \\\"status\\\" in \\n         <a style=\\\"font-style: normal;\\\" routerLink=\\\"/mini-term\\\">terminal</a> for more details of the node's status.</p> \\n      </ion-item>\\n     </ion-list>\\n</ion-footer>\\n</ion-app>\"","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { MiniStatusPage } from './mini-status.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: MiniStatusPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [MiniStatusPage]\n})\nexport class MiniStatusPageModule {}\n","module.exports = \"ion-list-header {\\n  --background: var(--ion-background-color, #f2f2f2);\\n  width: auto;\\n  height: 15px;\\n  border: 50px;\\n  border-right: 50px;\\n}\\n\\n#status-content {\\n  width: 100%;\\n  padding: 5px;\\n  border-radius: 20%;\\n  font-size: 0.5em;\\n}\\n\\n#status-content ion-icon {\\n  padding-left: 1em;\\n  color: #FF671D;\\n}\\n\\n#status-content ion-list ion-grid ion-col ion-item {\\n  font-size: 1.5em;\\n}\\n\\n.ion-text-wrap {\\n  word-wrap: normal;\\n}\\n\\nion-list ion-item h2 {\\n  color: #06AAC7;\\n}\\n\\nion-list ion-item p {\\n  white-space: normal;\\n}\\n\\n.active-icons {\\n  color: #06AAC7;\\n}\\n\\n.inactive-icons {\\n  color: #FF671D;\\n}\\n\\nion-footer ion-list ion-item {\\n  border-top: 2px solid #ffffcc;\\n  border-bottom: 2px solid #ffffcc;\\n  border-radius: 5px;\\n}\\n\\nion-list-header {\\n  background: var(--ion-card-header);\\n}\\n\\n.status-on {\\n  color: #48D2D3;\\n}\\n\\n.status-off {\\n  color: #f2f2f2;\\n}\\n\\n#version {\\n  font-family: \\\"Aeonik-light\\\";\\n  color: #06AAC7;\\n  font-size: 20px;\\n}\\n\\nion-toolbar {\\n  --background: var(--card-header-color);\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9lbGlhcy9Qcm9qZWN0cy9taW5pbWFjb3JlL21vYmlsZS1hcHAtZnJvbnQtZW5kL2FwcC9zcmMvYXBwL3BhZ2VzL21pbmktc3RhdHVzL21pbmktc3RhdHVzLnBhZ2Uuc2NzcyIsInNyYy9hcHAvcGFnZXMvbWluaS1zdGF0dXMvbWluaS1zdGF0dXMucGFnZS5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksa0RBQUE7RUFDQSxXQUFBO0VBQ0EsWUFBQTtFQUNBLFlBQUE7RUFDQSxrQkFBQTtBQ0NKOztBRENBO0VBQ0ksV0FBQTtFQUNBLFlBQUE7RUFDQSxrQkFBQTtFQUNBLGdCQUFBO0FDRUo7O0FEQ0E7RUFDSSxpQkFBQTtFQUNBLGNBQUE7QUNFSjs7QURDQTtFQUNJLGdCQUFBO0FDRUo7O0FEQ0E7RUFDSSxpQkFBQTtBQ0VKOztBRENBO0VBQ0ksY0FBQTtBQ0VKOztBRENBO0VBQ0ksbUJBQUE7QUNFSjs7QURDQTtFQUNJLGNBQUE7QUNFSjs7QURDQTtFQUNJLGNBQUE7QUNFSjs7QURDQTtFQUNJLDZCQUFBO0VBQ0EsZ0NBQUE7RUFDQSxrQkFBQTtBQ0VKOztBRENBO0VBQ0ksa0NBQUE7QUNFSjs7QURFQTtFQUNJLGNBQUE7QUNDSjs7QURDQTtFQUNJLGNBQUE7QUNFSjs7QURBQTtFQUNJLDJCQUFBO0VBQ0EsY0FBQTtFQUNBLGVBQUE7QUNHSjs7QURBQTtFQUNJLHNDQUFBO0FDR0oiLCJmaWxlIjoic3JjL2FwcC9wYWdlcy9taW5pLXN0YXR1cy9taW5pLXN0YXR1cy5wYWdlLnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJpb24tbGlzdC1oZWFkZXIge1xuICAgIC0tYmFja2dyb3VuZDogdmFyKC0taW9uLWJhY2tncm91bmQtY29sb3IsICNmMmYyZjIpO1xuICAgIHdpZHRoOiBhdXRvO1xuICAgIGhlaWdodDogMTVweDtcbiAgICBib3JkZXI6IDUwcHg7XG4gICAgYm9yZGVyLXJpZ2h0OiA1MHB4O1xufVxuI3N0YXR1cy1jb250ZW50IHtcbiAgICB3aWR0aDogMTAwJTtcbiAgICBwYWRkaW5nOiA1cHg7XG4gICAgYm9yZGVyLXJhZGl1czogMjAlO1xuICAgIGZvbnQtc2l6ZTogMC41ZW07XG59XG5cbiNzdGF0dXMtY29udGVudCBpb24taWNvbiB7XG4gICAgcGFkZGluZy1sZWZ0OiAxZW07XG4gICAgY29sb3I6ICNGRjY3MUQ7XG59XG5cbiNzdGF0dXMtY29udGVudCBpb24tbGlzdCBpb24tZ3JpZCBpb24tY29sIGlvbi1pdGVtIHtcbiAgICBmb250LXNpemU6IDEuNWVtO1xufVxuXG4uaW9uLXRleHQtd3JhcCB7XG4gICAgd29yZC13cmFwOiBub3JtYWw7XG59XG5cbmlvbi1saXN0IGlvbi1pdGVtIGgyIHtcbiAgICBjb2xvcjogIzA2QUFDNztcbn1cblxuaW9uLWxpc3QgaW9uLWl0ZW0gcCB7XG4gICAgd2hpdGUtc3BhY2U6IG5vcm1hbDtcbn1cblxuLmFjdGl2ZS1pY29ucyB7XG4gICAgY29sb3I6ICMwNkFBQzc7XG5cbn1cbi5pbmFjdGl2ZS1pY29uc3tcbiAgICBjb2xvcjogI0ZGNjcxRDtcbn1cblxuaW9uLWZvb3RlciBpb24tbGlzdCBpb24taXRlbSB7XG4gICAgYm9yZGVyLXRvcDogMnB4IHNvbGlkICNmZmZmY2M7XG4gICAgYm9yZGVyLWJvdHRvbTogMnB4IHNvbGlkI2ZmZmZjYztcbiAgICBib3JkZXItcmFkaXVzOiA1cHg7XG59XG5cbmlvbi1saXN0LWhlYWRlciB7XG4gICAgYmFja2dyb3VuZDogdmFyKC0taW9uLWNhcmQtaGVhZGVyKTtcbn1cblxuXG4uc3RhdHVzLW9uIHtcbiAgICBjb2xvcjogIzQ4RDJEMztcbn1cbi5zdGF0dXMtb2ZmIHtcbiAgICBjb2xvcjogI2YyZjJmMjtcbn1cbiN2ZXJzaW9uIHtcbiAgICBmb250LWZhbWlseTogJ0Flb25pay1saWdodCc7XG4gICAgY29sb3I6ICMwNkFBQzc7XG4gICAgZm9udC1zaXplOiAyMHB4O1xufVxuXG5pb24tdG9vbGJhciB7XG4gICAgLS1iYWNrZ3JvdW5kOiB2YXIoLS1jYXJkLWhlYWRlci1jb2xvcik7XG4gIH0iLCJpb24tbGlzdC1oZWFkZXIge1xuICAtLWJhY2tncm91bmQ6IHZhcigtLWlvbi1iYWNrZ3JvdW5kLWNvbG9yLCAjZjJmMmYyKTtcbiAgd2lkdGg6IGF1dG87XG4gIGhlaWdodDogMTVweDtcbiAgYm9yZGVyOiA1MHB4O1xuICBib3JkZXItcmlnaHQ6IDUwcHg7XG59XG5cbiNzdGF0dXMtY29udGVudCB7XG4gIHdpZHRoOiAxMDAlO1xuICBwYWRkaW5nOiA1cHg7XG4gIGJvcmRlci1yYWRpdXM6IDIwJTtcbiAgZm9udC1zaXplOiAwLjVlbTtcbn1cblxuI3N0YXR1cy1jb250ZW50IGlvbi1pY29uIHtcbiAgcGFkZGluZy1sZWZ0OiAxZW07XG4gIGNvbG9yOiAjRkY2NzFEO1xufVxuXG4jc3RhdHVzLWNvbnRlbnQgaW9uLWxpc3QgaW9uLWdyaWQgaW9uLWNvbCBpb24taXRlbSB7XG4gIGZvbnQtc2l6ZTogMS41ZW07XG59XG5cbi5pb24tdGV4dC13cmFwIHtcbiAgd29yZC13cmFwOiBub3JtYWw7XG59XG5cbmlvbi1saXN0IGlvbi1pdGVtIGgyIHtcbiAgY29sb3I6ICMwNkFBQzc7XG59XG5cbmlvbi1saXN0IGlvbi1pdGVtIHAge1xuICB3aGl0ZS1zcGFjZTogbm9ybWFsO1xufVxuXG4uYWN0aXZlLWljb25zIHtcbiAgY29sb3I6ICMwNkFBQzc7XG59XG5cbi5pbmFjdGl2ZS1pY29ucyB7XG4gIGNvbG9yOiAjRkY2NzFEO1xufVxuXG5pb24tZm9vdGVyIGlvbi1saXN0IGlvbi1pdGVtIHtcbiAgYm9yZGVyLXRvcDogMnB4IHNvbGlkICNmZmZmY2M7XG4gIGJvcmRlci1ib3R0b206IDJweCBzb2xpZCAjZmZmZmNjO1xuICBib3JkZXItcmFkaXVzOiA1cHg7XG59XG5cbmlvbi1saXN0LWhlYWRlciB7XG4gIGJhY2tncm91bmQ6IHZhcigtLWlvbi1jYXJkLWhlYWRlcik7XG59XG5cbi5zdGF0dXMtb24ge1xuICBjb2xvcjogIzQ4RDJEMztcbn1cblxuLnN0YXR1cy1vZmYge1xuICBjb2xvcjogI2YyZjJmMjtcbn1cblxuI3ZlcnNpb24ge1xuICBmb250LWZhbWlseTogXCJBZW9uaWstbGlnaHRcIjtcbiAgY29sb3I6ICMwNkFBQzc7XG4gIGZvbnQtc2l6ZTogMjBweDtcbn1cblxuaW9uLXRvb2xiYXIge1xuICAtLWJhY2tncm91bmQ6IHZhcigtLWNhcmQtaGVhZGVyLWNvbG9yKTtcbn0iXX0= */\"","import { Subscription } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { StatusService } from './../../service/status.service';\nimport { Component, OnInit, ChangeDetectorRef, Input } from '@angular/core';\nimport { Status } from '../../models/status.model';\nimport { Platform } from '@ionic/angular';\n\n@Component({\n  selector: 'app-mini-status',\n  templateUrl: './mini-status.page.html',\n  styleUrls: ['./mini-status.page.scss'],\n  providers: [ StatusService ] \n})\n\nexport class MiniStatusPage implements OnInit {\n\n  status: { status: boolean, minifunc: string, message: string, response: Status};\n  statusSubscription: Subscription;\n\n  public statusOfStatus: string = 'empty';\n  public lastJSON: string;\n\n  // - vars\n  private host = '';\n  private loader: any = null;\n\n  constructor(private service: StatusService, private ref: ChangeDetectorRef, private plat: Platform) {}\n \n  ngOnInit() { }\n\n  ionViewWillEnter() {\n    setTimeout(() => {\n      this.updateStatus(); // subscribes & polls status\n      this.statusOfStatus = 'updated';\n    }, 500);\n\n    window.addEventListener('MinimaEvent', (evt: any)=> {\n      // Event connection success\n      if(evt.detail.event === 'newblock') {\n\n        this.updateStatus();\n        this.statusOfStatus = 'updated';\n        // setTimeout(() => {\n        //   this.updateStatus(); // subscribes & polls status\n        // }, 3500);\n        \n  \n      } \n    });\n  }\n\n  ionViewWillLeave(){\n  \n    if(this.statusSubscription){\n\n      this.statusSubscription.unsubscribe(); // unsubs\n\n    }\n\n  }\n\n  getImg() {\n    if(document.body.classList.value === 'dark'){\n      return '../../assets/fulllogodark.svg';\n    } else {\n      return '../../assets/fulllogo.svg';\n    }\n  }\n\n  checkPlatform(): Boolean {\n    if(this.plat.is('ios') || this.plat.is('android')){\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  updateStatus() {\n\n    this.statusSubscription = this.service.getStatus()\n    .pipe(map(responseData => {\n      \n      const status = responseData;\n      \n      return status;\n    })\n    )\n    .subscribe((res : any) => {\n      \n      if(this.lastJSON != JSON.stringify(res)){\n        this.status = res;\n        this.statusOfStatus = 'updated';\n        this.lastJSON = JSON.stringify(res);\n      } \n      \n      \n    });\n  }\n  \n\n  \n}\n","import { Status } from '../models/status.model';\nimport { environment } from './../../environments/environment.prod';\nimport { HttpClient } from '@angular/common/http';\nimport { Injectable, ChangeDetectorRef } from '@angular/core';\nimport { Observable, Subscription, Subject } from 'rxjs';\nimport { map, concatMap, merge } from 'rxjs/operators';\nimport { timer } from 'rxjs/Observable/timer';\n\ndeclare var Minima: any;\n@Injectable({\n  providedIn: 'root'\n})\nexport class StatusService {\n\n  polledStatus$: Observable<any>;\n  manualRefresh = new Subject();\n\n  private host = '';\n  private loader: any = null;\n\n  constructor(private http: HttpClient, private ref: ChangeDetectorRef) {\n    this.host = environment.defaultNode;\n    this.host = this.getHost();\n   }\n   \n  getStatus(): Observable<{ status: boolean, minifunc: string, message: string, response: Status}> {\n    return this.request('status');\n  }\n\n  private getHost() {\n    if (localStorage.getItem('minima_host') == null) {\n      localStorage.setItem('minima_host', this.host);\n      return this.host;\n    } else {\n      return localStorage.getItem('minima_host');\n    }\n  }\n\n  doRefresh(event) {\n    this.manualRefresh.next('');\n    setTimeout( () => {\n      event.target.complete();\n    }, 1000);\n  }\n\n  private request(route: any) {\n    // let apiUrl = this.host + route; // this.host+'route' = \"127.0.0.1:8999/'balance'\"\n    // let status$ = this.http.get(apiUrl);\n\n    const statusObservable = Observable.create(observer => {\n      observer.next(Minima.status);\n    });\n\n    let status$ = statusObservable;\n    \n    return this.polledStatus$ = timer(0, 3000).pipe(\n\n      concatMap(_ => status$),\n      map((res: {status: boolean, minifunc: string, message: string, response: Status}) => res)\n\n    );\n  }\n\n\n    \n\n}"],"sourceRoot":""}