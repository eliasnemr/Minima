{"version":3,"sources":["./src/app/pages/history/history.page.html","./src/app/pages/history/history.module.ts","./src/app/pages/history/history.page.scss","./src/app/pages/history/history.page.ts","./src/app/service/history.service.ts"],"names":[],"mappings":"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","file":"pages-history-history-module-es5.js","sourcesContent":["module.exports = \"<ion-app>\\n  <ion-header>\\n    <ion-toolbar>\\n      <ion-buttons slot=\\\"start\\\">\\n        <ion-menu-button class=\\\"menu-icon\\\"></ion-menu-button>\\n        </ion-buttons>\\n      <ion-title class=\\\"large-text\\\">Transaction History</ion-title>\\n    </ion-toolbar>\\n  </ion-header>\\n  \\n  <ion-content>\\n\\n  <ion-card>\\n  \\n  <ion-card-header>\\n  <!-- Category Segment -->\\n  <ion-segment (ionChange)=\\\"segmentChanged($event, slides)\\\" [(ngModel)] = \\\"categories\\\">\\n    <ion-segment-button value=\\\"0\\\" class=\\\"seg\\\">\\n      <ion-label>Transactions</ion-label>\\n    </ion-segment-button>\\n    <ion-segment-button value=\\\"1\\\" class=\\\"seg\\\">\\n      <ion-label>Tokens</ion-label>\\n    </ion-segment-button>\\n    <ion-segment-button value=\\\"2\\\" class=\\\"seg\\\">\\n    <ion-label>All</ion-label>\\n    </ion-segment-button>\\n  </ion-segment>\\n  </ion-card-header>\\n\\n  <ion-slides #slides \\n              pager=\\\"true\\\"\\n             [options]=\\\"sliderOptions\\\" \\n             (ionSlideDidChange)=\\\"slideChanged(slides)\\\" \\n             (ionSlideDidLoad)=\\\"slideChanged(slides)\\\">\\n\\n  <!-- @@@@@@@@@@@@@@@@@@@@@@@@@@@ Transactions @@@@@@@@@@@@@@@@@@@@@@@@@@@ -->\\n  <ion-slide>\\n    <ion-card-content>\\n    <!-- NO TRANSACTIONS -->\\n    <ion-text *ngIf=\\\"isEmpty\\\" class=\\\"medium-text\\\">No activities to display.</ion-text>\\n\\n    <span *ngFor=\\\"let transaction of transactions;\\\">\\n    <ion-grid>\\n      <ion-row *ngIf=\\\"transactions.length >= 1 && transaction.values[0].name !== 'Create Token';\\\">\\n        <ion-item \\n        lines=\\\"full\\\" \\n        class=\\\"activity\\\"\\n        (click)=\\\"presentModal(transaction.txpow.txpowid, \\n                  transaction.values[0].amount,\\n                  transaction.txpow.body.txn.state,\\n                  transaction.txpow.header.block,\\n                  transaction.txpow.body.txn.inputs[0].tokenid,\\n                  transaction.txpow.header.date,\\n                  transaction.txpow.isblock,\\n                  transaction.values[0].name,\\n                  transaction.txpow.body.txn.outputs[0].address)\\\">\\n\\n      <!-- TXN Icon -- desktop only -->\\n      <ion-col size=\\\"1\\\" [hidden]=\\\"ios\\\">\\n        <ion-icon [name]=\\\"getTXNType(transaction.values[0].amount)\\\" class=\\\"large-text\\\"></ion-icon>\\n      </ion-col>\\n\\n      <!-- TXN Date -->\\n      <ion-col size=\\\"2\\\" fixed=\\\"true\\\">\\n      <span>\\n      <p class=\\\"small-text\\\" id=\\\"day\\\">\\n      {{ transaction.txpow.header.date.substring(8, 10) }}\\n      </p>\\n      <h1 class=\\\"medium-text\\\" id=\\\"month\\\">\\n      {{ transaction.txpow.header.date.substring(4, 7) }} \\n      </h1>\\n      </span>\\n      </ion-col>\\n\\n\\n      <!-- If it's minima do this.. -->\\n        <!-- TXN Description -->\\n      <ion-col *ngIf=\\\"!transaction.values[0].name.name\\\" size=\\\"4\\\" fixed=\\\"true\\\" [hidden]=\\\"ios\\\">\\n        <span class=\\\"medium-text\\\" *ngIf=\\\"transaction.values[0].amount.substring(0,1) == '-'\\\"> \\n          Sent Minima\\n        </span>\\n\\n        <span class=\\\"medium-text\\\" *ngIf=\\\"transaction.values[0].amount.substring(0,1) !== '-'\\\">\\n          Received Minima\\n        </span>\\n      </ion-col>\\n\\n      <!-- TXN Description -->\\n      <ion-col *ngIf=\\\"!transaction.values[0].name.name\\\" size=\\\"6\\\" fixed=\\\"true\\\" [hidden]=\\\"!ios\\\">\\n        <span class=\\\"medium-text\\\" *ngIf=\\\"transaction.values[0].amount.substring(0,1) == '-'\\\"> \\n          Sent Minima\\n        </span>\\n\\n        <span class=\\\"medium-text\\\" *ngIf=\\\"transaction.values[0].amount.substring(0,1) !== '-'\\\">\\n          Received Minima\\n        </span>\\n      </ion-col>\\n\\n      <!-- If it's a TOKEN.. do this.. -->\\n        <!-- TXN Description -->\\n      <ion-col *ngIf=\\\"transaction.values[0].name.name\\\" size=\\\"4\\\" fixed=\\\"true\\\" [hidden]=\\\"ios\\\">\\n        <span class=\\\"medium-text\\\" *ngIf=\\\"transaction.values[0].amount.substring(0,1) == '-'\\\"> \\n          Sent {{ transaction.values[0].name.name }}\\n        </span>\\n\\n        <span class=\\\"medium-text\\\" *ngIf=\\\"transaction.values[0].amount.substring(0,1) !== '-'\\\">\\n          Received {{ transaction.values[0].name.name }}\\n        </span>\\n      </ion-col>\\n\\n      <!-- TXN Description -->\\n      <ion-col *ngIf=\\\"transaction.values[0].name.name\\\" size=\\\"6\\\" fixed=\\\"true\\\" [hidden]=\\\"!ios\\\">\\n        <span class=\\\"medium-text\\\" *ngIf=\\\"transaction.values[0].amount.substring(0,1) == '-'\\\"> \\n          Sent {{ transaction.values[0].name.name }}\\n        </span>\\n\\n        <span class=\\\"medium-text\\\" *ngIf=\\\"transaction.values[0].amount.substring(0,1) !== '-'\\\">\\n          Received {{ transaction.values[0].name.name }}\\n        </span>\\n      </ion-col>\\n      \\n\\n      <!-- TXN AMOUNT -->\\n      <ion-col size=\\\"4\\\" fixed=\\\"true\\\">\\n        <span  *ngIf=\\\"transaction.values[0].amount.substring(0,1) == '-'\\\"> \\n          <h2 class=\\\"negative medium-text\\\">{{ transaction.values[0].amount}}</h2>\\n        </span>\\n\\n        <span  *ngIf=\\\"transaction.values[0].amount.substring(0,1) !== '-'\\\">\\n          <h2 class=\\\"positive medium-text\\\">{{ \\\"+\\\"+ transaction.values[0].amount}}</h2>\\n        </span>\\n      </ion-col>\\n\\n      <!-- TXN Message -->\\n      <ion-col size=\\\"4\\\" class=\\\"medium-text\\\" *ngIf=\\\"transaction.txpow.body.txn.state.length > 0\\\" [hidden]=\\\"ios\\\">\\n      <ion-note *ngIf=\\\"transaction.txpow.body.txn.state[1].data.length <= 15\\\" class=\\\"msg-details\\\">{{transaction.txpow.body.txn.state[1].data.substring(0, 15)}}</ion-note>\\n      <ion-note *ngIf=\\\"transaction.txpow.body.txn.state[1].data.length > 15\\\" class=\\\"msg-details\\\">{{transaction.txpow.body.txn.state[1].data.substring(0, 8) + \\\"...\\\"}}</ion-note>\\n      </ion-col>\\n    </ion-item>\\n\\n    </ion-row>\\n      </ion-grid>\\n      </span>\\n        </ion-card-content>\\n          </ion-slide>\\n\\n    <!-- @@@@@@@@@@@@@@@@@@@@@@@@@@@ Token Creation @@@@@@@@@@@@@@@@@@@@@@@@@@@ -->\\n    <ion-slide>\\n      <ion-card-content style=\\\"width: 100%; text-align: center;\\\">\\n    \\n        <ion-text *ngIf=\\\"tokens.length < 1\\\">No token activities to display. </ion-text>\\n    \\n    <span *ngIf=\\\"tokens.length > 0\\\">\\n    <ion-grid *ngFor=\\\"let transaction of tokens;\\\">\\n      <ion-row *ngIf=\\\"transactions.length >= 1 && transaction.values[0].name === 'Create Token';\\\">\\n        <ion-item lines=\\\"full\\\" class=\\\"activity-tokens\\\"\\n        (click)=\\\"presentTokenModal(transaction.txpow.txpowid, \\n                  transaction.values[0].amount,\\n                  transaction.txpow.body.txn.state,\\n                  transaction.txpow.header.block,\\n                  transaction.txpow.body.txn.tokengen.tokenid,\\n                  transaction.txpow.header.date,\\n                  transaction.txpow.isblock,\\n                  transaction.values[0].name,\\n                  transaction.txpow.body.txn.tokengen.token,\\n                  transaction.txpow.body.txn.tokengen.total,\\n                  transaction.txpow.body.txn.tokengen.description)\\\">\\n      \\n      <!-- TXN Icon -->\\n      <ion-col size=\\\"1\\\" [hidden]=\\\"ios\\\">\\n      <ion-icon name=\\\"brush\\\" class=\\\"large-text\\\"></ion-icon>\\n      </ion-col>\\n\\n      <!-- TXN Date -->\\n      <ion-col size=\\\"2\\\" fixed=\\\"true\\\">\\n      <span>\\n      <p id=\\\"day\\\">\\n      {{ transaction.txpow.header.date.substring(8, 10) }}\\n      </p>\\n      <h1 id=\\\"month\\\">\\n      {{ transaction.txpow.header.date.substring(4, 7) }} \\n      </h1>\\n      </span>\\n      </ion-col>\\n\\n      <!-- TXN Description -->\\n      <ion-col size=\\\"4\\\" class=\\\"col-transtype\\\" fixed=\\\"true\\\" [hidden]=\\\"ios\\\">\\n        <span id=\\\"transaction\\\">\\n        <h2 class=\\\"h2-type medium-text\\\">\\n        Created a token\\n        </h2>\\n        <p class=\\\"medium-text\\\" id=\\\"token-name\\\">{{ transaction.txpow.body.txn.tokengen.token }}</p>\\n        </span>\\n      </ion-col>\\n      <!-- TXN Description -->\\n      <ion-col size=\\\"5\\\" class=\\\"col-transtype\\\" fixed=\\\"true\\\" [hidden]=\\\"!ios\\\">\\n        <span id=\\\"transaction\\\">\\n        <h2 class=\\\"h2-type medium-text\\\">\\n        Created a token\\n        </h2>\\n        <p class=\\\"small-text\\\" id=\\\"token-name\\\">{{ transaction.txpow.body.txn.tokengen.token }}</p>\\n        </span>\\n      </ion-col>\\n\\n\\n      <!-- TXN AMOUNT -->\\n      <ion-col id=\\\"amount\\\" size=\\\"4\\\" fixed=\\\"true\\\">\\n        <span *ngIf=\\\"transaction.values[0].amount.substring(0,1) == '-'\\\"> \\n          <h2 class=\\\"positive medium-text\\\">{{ \\\"+\\\" + transaction.txpow.body.txn.tokengen.total }}</h2>\\n          <p id=\\\"mini-amnt small-text\\\">{{ \\\"-\\\"+transaction.values[0].amount + \\\" MINI\\\"}}</p>\\n        </span>\\n\\n        <span *ngIf=\\\"transaction.values[0].amount.substring(0,1) !== '-'\\\">\\n          <h2 class=\\\"positive medium-text\\\">{{ \\\"+\\\" +transaction.txpow.body.txn.tokengen.total }}</h2>\\n          <p id=\\\"mini-amnt small-text\\\">{{ \\\"-\\\"+transaction.values[0].amount + \\\" MINI\\\"}}</p>\\n        </span>\\n      </ion-col>\\n\\n    </ion-item>\\n      </ion-row>\\n      </ion-grid>\\n      </span>\\n        </ion-card-content>\\n         </ion-slide>\\n\\n    <!-- @@@@@@@@@@@@@@@@@@@@@@@@@ All @@@@@@@@@@@@@@@@@@@@@@@@@@@@@ -->\\n    <ion-slide>\\n      <ion-card-content>\\n\\n      <ion-text *ngIf=\\\"isEmpty\\\">No activities to display.</ion-text>\\n\\n    <span *ngIf=\\\"tokens.length > 0 || transactions.length > 0\\\">\\n      <ion-grid *ngFor=\\\"let transaction of allTransactions;\\\">\\n      <ion-row *ngIf=\\\"transactions.length >= 1 && transaction.values[0].name !== 'Create Token';\\\">\\n        <ion-item lines=\\\"full\\\" class=\\\"activity\\\"\\n        (click)=\\\"presentModal(transaction.txpow.txpowid, \\n                  transaction.values[0].amount,\\n                  transaction.txpow.body.txn.state,\\n                  transaction.txpow.header.block,\\n                  transaction.txpow.body.txn.inputs[0].tokenid,\\n                  transaction.txpow.header.date,\\n                  transaction.txpow.isblock,\\n                  transaction.values[0].name)\\\">\\n\\n      <!-- TXN Icon -->\\n      <ion-col size=\\\"1\\\" [hidden]=\\\"ios\\\">\\n      <ion-icon [name]=\\\"getTXNType(transaction.values[0].amount)\\\" class=\\\"large-text\\\"></ion-icon>\\n      </ion-col>\\n\\n      <!-- TXN Date -->\\n      <ion-col size=\\\"2\\\" class=\\\"col-month\\\" fixed=\\\"true\\\">\\n      <ion-label>\\n      <p class=\\\"small-text\\\" id=\\\"day\\\">\\n      {{ transaction.txpow.header.date.substring(8, 10) }}\\n      </p>\\n      <h1 class=\\\"medium-text\\\" id=\\\"month\\\">\\n      {{ transaction.txpow.header.date.substring(4, 7) }} \\n      </h1>\\n      </ion-label>\\n      </ion-col>\\n\\n      <!-- If it's minima do this.. -->\\n        <!-- TXN Description -->\\n      <ion-col *ngIf=\\\"!transaction.values[0].name.name\\\" size=\\\"4\\\" fixed=\\\"true\\\" [hidden]=\\\"ios\\\">\\n        <span class=\\\"medium-text\\\" *ngIf=\\\"transaction.values[0].amount.substring(0,1) == '-'\\\"> \\n          Sent Minima\\n        </span>\\n\\n        <span class=\\\"medium-text\\\" *ngIf=\\\"transaction.values[0].amount.substring(0,1) !== '-'\\\">\\n          Received Minima\\n        </span>\\n      </ion-col>\\n\\n      <!-- TXN Description -->\\n      <ion-col *ngIf=\\\"!transaction.values[0].name.name\\\" size=\\\"6\\\" fixed=\\\"true\\\" [hidden]=\\\"!ios\\\">\\n        <span class=\\\"medium-text\\\" *ngIf=\\\"transaction.values[0].amount.substring(0,1) == '-'\\\"> \\n          Sent Minima\\n        </span>\\n\\n        <span class=\\\"medium-text\\\" *ngIf=\\\"transaction.values[0].amount.substring(0,1) !== '-'\\\">\\n          Received Minima\\n        </span>\\n      </ion-col>\\n\\n      <!-- If it's a TOKEN.. do this.. -->\\n        <!-- TXN Description -->\\n      <ion-col *ngIf=\\\"transaction.values[0].name.name\\\" size=\\\"4\\\" fixed=\\\"true\\\" [hidden]=\\\"ios\\\">\\n        <span class=\\\"medium-text\\\" *ngIf=\\\"transaction.values[0].amount.substring(0,1) == '-'\\\"> \\n          Sent {{ transaction.values[0].name.name }}\\n        </span>\\n\\n        <span class=\\\"medium-text\\\" *ngIf=\\\"transaction.values[0].amount.substring(0,1) !== '-'\\\">\\n          Received {{ transaction.values[0].name.name }}\\n        </span>\\n      </ion-col>\\n\\n      <!-- TXN Description -->\\n      <ion-col *ngIf=\\\"transaction.values[0].name.name\\\" size=\\\"6\\\" fixed=\\\"true\\\" [hidden]=\\\"!ios\\\">\\n        <span class=\\\"medium-text\\\" *ngIf=\\\"transaction.values[0].amount.substring(0,1) == '-'\\\"> \\n          Sent {{ transaction.values[0].name.name }}\\n        </span>\\n\\n        <span class=\\\"medium-text\\\" *ngIf=\\\"transaction.values[0].amount.substring(0,1) !== '-'\\\">\\n          Received {{ transaction.values[0].name.name }}\\n        </span>\\n      </ion-col>\\n\\n      <!-- TXN AMOUNT -->\\n      <ion-col size=\\\"4\\\" fixed=\\\"true\\\">\\n        <span *ngIf=\\\"transaction.values[0].amount.substring(0,1) == '-'\\\"> \\n          <h2 class=\\\"negative medium-text\\\">{{ transaction.values[0].amount}}</h2>\\n        </span>\\n\\n        <span *ngIf=\\\"transaction.values[0].amount.substring(0,1) !== '-'\\\">\\n          <h2 class=\\\"positive medium-text\\\">{{ \\\"+\\\"+ transaction.values[0].amount}}</h2>\\n        </span>\\n      </ion-col>\\n\\n      <!-- TXN Message -->\\n      <ion-col size=\\\"4\\\" *ngIf=\\\"transaction.txpow.body.txn.state.length > 0\\\" [hidden]=\\\"ios\\\">\\n      <ion-note *ngIf=\\\"transaction.txpow.body.txn.state[1].data.length <= 15\\\" class=\\\"msg-details small-text\\\">{{transaction.txpow.body.txn.state[1].data.substring(0, 15)}}</ion-note>\\n      <ion-note *ngIf=\\\"transaction.txpow.body.txn.state[1].data.length > 15\\\" class=\\\"msg-details small-text\\\">{{transaction.txpow.body.txn.state[1].data.substring(0, 15) + \\\"...\\\"}}</ion-note>\\n      </ion-col>\\n    </ion-item>\\n    <!-- Tokens -->\\n    </ion-row>\\n    \\n    <ion-row *ngIf=\\\"transactions.length >= 1 && transaction.values[0].name === 'Create Token';\\\">\\n    <ion-item\\n    lines=\\\"full\\\"\\n    class=\\\"activity-tokens\\\"\\n    (click)=\\\"presentTokenModal(transaction.txpow.txpowid, \\n                  transaction.values[0].amount,\\n                  transaction.txpow.body.txn.state,\\n                  transaction.txpow.header.block,\\n                  transaction.txpow.body.txn.tokengen.tokenid,\\n                  transaction.txpow.header.date,\\n                  transaction.txpow.isblock,\\n                  transaction.values[0].name,\\n                  transaction.txpow.body.txn.tokengen.token,\\n                  transaction.txpow.body.txn.tokengen.total,\\n                  transaction.txpow.body.txn.tokengen.description)\\\">\\n      <!-- TXN Icon -->\\n      <ion-col size=\\\"1\\\" [hidden]=\\\"ios\\\">\\n      <ion-icon name=\\\"brush\\\" class=\\\"large-text\\\"></ion-icon>\\n      </ion-col>\\n\\n      <!-- TXN Date -->\\n      <ion-col size=\\\"2\\\" fixed=\\\"true\\\">\\n      <span>\\n      <p  class=\\\"small-text\\\" id=\\\"day\\\">\\n      {{ transaction.txpow.header.date.substring(8, 10) }}\\n      </p>\\n      <h1 class=\\\"medium-text\\\" id=\\\"month\\\">\\n      {{ transaction.txpow.header.date.substring(4, 7) }} \\n      </h1>\\n      </span>\\n      </ion-col>\\n\\n      <!-- TXN Description -->\\n      <ion-col size=\\\"4\\\" class=\\\"col-transtype\\\" fixed=\\\"true\\\" [hidden]=\\\"ios\\\">\\n        <span id=\\\"transaction\\\">\\n        <h2 class=\\\"h2-type medium-text\\\">\\n        Created a token\\n        </h2>\\n        <p class=\\\"small-text\\\" id=\\\"token-name\\\">{{ transaction.txpow.body.txn.tokengen.token }}</p>\\n        </span>\\n      </ion-col>\\n      <!-- TXN Description -->\\n      <ion-col size=\\\"5\\\" class=\\\"col-transtype\\\" fixed=\\\"true\\\" [hidden]=\\\"!ios\\\">\\n        <span id=\\\"transaction\\\">\\n        <h2 class=\\\"h2-type medium-text\\\">\\n        Created a token\\n        </h2>\\n        <p class=\\\"small-text\\\" id=\\\"token-name\\\">{{ transaction.txpow.body.txn.tokengen.token }}</p>\\n        </span>\\n      </ion-col>\\n\\n\\n      <!-- TXN AMOUNT -->\\n      <ion-col id=\\\"amount\\\" size=\\\"4\\\" fixed=\\\"true\\\">\\n        <span *ngIf=\\\"transaction.values[0].amount.substring(0,1) == '-'\\\"> \\n          <h2 class=\\\"positive medium-text\\\">{{ \\\"+\\\" + transaction.txpow.body.txn.tokengen.total }}</h2>\\n          <p id=\\\"mini-amnt small-text\\\">{{ \\\"-\\\"+transaction.values[0].amount + \\\" MINI\\\"}}</p>\\n        </span>\\n\\n        <span  *ngIf=\\\"transaction.values[0].amount.substring(0,1) !== '-'\\\">\\n          <h2 class=\\\"positive medium-text\\\">{{ \\\"+\\\" +transaction.txpow.body.txn.tokengen.total }}</h2>\\n          <p id=\\\"mini-amnt small-text\\\">{{ \\\"-\\\"+transaction.values[0].amount + \\\" MINI\\\"}}</p>\\n        </span>\\n      </ion-col>\\n    \\n    </ion-item>\\n      </ion-row>\\n        </ion-grid>\\n          </span>\\n          </ion-card-content>\\n            </ion-slide>\\n\\n\\n    <ion-slide>\\n    <!-- SKELETON FOR UX LOADING -->\\n  <span *ngFor=\\\"let length of t_summarySpoof\\\">\\n  <ion-grid>\\n    <ion-row *ngIf=\\\"length.values[0].name !== 'Create Token' && transactions.length < 1\\\">\\n      <ion-item  class=\\\"activity-skeleton\\\" lines=\\\"full\\\">\\n\\n    <!-- TXN Icon Skeleton -->\\n    <ion-col size=\\\"1\\\" [hidden]=\\\"ios\\\">\\n    <ion-skeleton-text animated style=\\\"width: 50%; height: 50%;\\\"></ion-skeleton-text>\\n    </ion-col>\\n\\n    <!-- TXN Date Skeleton -->\\n    <ion-col size=\\\"2\\\" class=\\\"col-month\\\" fixed=\\\"true\\\">\\n      <ion-label>\\n      <p id=\\\"day\\\">\\n        <ion-skeleton-text animated style=\\\"width: 5%\\\"></ion-skeleton-text>\\n      </p>\\n      <h1 id=\\\"month\\\">\\n        <ion-skeleton-text animated style=\\\"width: 10%; height: 10%;\\\"></ion-skeleton-text>\\n      </h1>\\n      </ion-label>\\n    </ion-col>\\n  <!-- TXN Details Skeleton -->\\n  <ion-col size=\\\"2\\\"class=\\\"col-transtype\\\" fixed=\\\"true\\\">\\n    <ion-label id=\\\"transaction\\\">\\n      <h2 class=\\\"h2-type\\\">\\n        <ion-skeleton-text animated style=\\\"width: 50%\\\"></ion-skeleton-text>\\n      </h2>\\n    </ion-label>\\n  </ion-col>\\n  <!-- TXN Amount Skeleton-->\\n  <ion-col size=\\\"6\\\" class=\\\"col-transamnt\\\" fixed=\\\"true\\\">\\n    <ion-label class=\\\"amount\\\">\\n      <h2 class=\\\"amount-h2\\\">\\n        <ion-skeleton-text animated style=\\\"width: 60%\\\"></ion-skeleton-text>\\n      </h2>\\n    </ion-label> \\n  </ion-col>\\n\\n  <!-- TXN Message Skeleton -->\\n  <ion-col size=\\\"4\\\" [hidden]=\\\"ios\\\">\\n  <ion-skeleton-text animated style=\\\"width: 50%; height: 10%;\\\"></ion-skeleton-text>\\n  </ion-col>\\n\\n  </ion-item>\\n    </ion-row>\\n      </ion-grid>\\n      </span>\\n        </ion-slide>\\n      </ion-slides>\\n  </ion-card>\\n\\n\\n  \\n  \\n  \\n  \\n</ion-content>\\n  </ion-app>\"","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { HistoryPage } from './history.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: HistoryPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [HistoryPage]\n})\nexport class HistoryPageModule {}\n","module.exports = \"ion-grid {\\n  --ion-grid-padding: 0;\\n  --ion-grid-column-padding: 0;\\n  --ion-grid-width-xl: 360px;\\n  --ion-grid-width-lg: 360px;\\n  --ion-grid-padding-md: 90px;\\n}\\n\\nion-card-header {\\n  --background: var(--ion-background-color, #f2f2f2);\\n  background: -webkit-gradient(linear, left top, left bottom, from(var(--ion-background-color, #fff)), to(var(--ion-background-color, #f2f2f2))) !important;\\n  background: linear-gradient(to bottom, var(--ion-background-color, #fff) 0%, var(--ion-background-color, #f2f2f2) 100%) !important;\\n}\\n\\nion-card-content {\\n  width: 100%;\\n  text-align: center;\\n}\\n\\nion-segment {\\n  margin-top: 5px;\\n  padding: 0px 10px 0px 10px;\\n}\\n\\nion-card-content ion-text {\\n  margin-top: 10px;\\n}\\n\\nion-row {\\n  padding: 2px;\\n}\\n\\nion-grid {\\n  padding: 0px;\\n}\\n\\nion-row:hover {\\n  background: var(--ion-background-color, #f2f2f2);\\n}\\n\\n.list-md {\\n  padding: 0px 0px 0px 0px !important;\\n}\\n\\n/** @@@@@@ TXN Details @@@@@@ **/\\n\\n.date {\\n  display: block;\\n}\\n\\n.amount {\\n  margin-left: 120px;\\n}\\n\\n.ios .amount {\\n  margin-left: 0px;\\n}\\n\\n.md .amount {\\n  margin-left: 0px;\\n}\\n\\n.activity {\\n  width: 100%;\\n  border-left: 2px solid #07ABC8;\\n}\\n\\n.activity-tokens {\\n  width: 100%;\\n  border-left: 2px solid #6dcc92;\\n}\\n\\n.divider {\\n  padding: 5px;\\n}\\n\\n.activity-skeleton {\\n  width: 100%;\\n  border-left: 2px solid #f2f2f2;\\n}\\n\\nion-row {\\n  width: 100%;\\n}\\n\\n.activity div h1 {\\n  font-size: 14px;\\n  text-transform: uppercase;\\n}\\n\\n#amount {\\n  font-weight: 500;\\n  font-size: 18px;\\n}\\n\\n#month {\\n  font-weight: 700;\\n  font-size: 20px;\\n  color: #00AAC7;\\n}\\n\\n#day {\\n  font-weight: 700;\\n  font-size: 22px;\\n  color: #FF671D;\\n}\\n\\n#token-name {\\n  font-weight: 700;\\n}\\n\\n.p-tokenid {\\n  font-weight: bolder;\\n  font-size: 18px;\\n}\\n\\n.amount-p {\\n  font-weight: bolder;\\n  font-size: 20px;\\n}\\n\\n.amount-h2 {\\n  font-weight: bolder;\\n  font-size: 20px;\\n}\\n\\n.msg-details {\\n  font-size: 16px;\\n  white-space: normal !important;\\n}\\n\\n#token-name {\\n  font-weight: 300;\\n  color: #b3b3b3;\\n}\\n\\n#mini-amnt {\\n  font-weight: 300;\\n  font-size: 12px;\\n  color: #b3b3b3;\\n}\\n\\n.negative {\\n  color: #F07473;\\n  font-weight: 500;\\n}\\n\\n.positive {\\n  color: #48D2D3;\\n  font-weight: 800;\\n}\\n\\n/** @@@@@@@@@@@@@@@@@ iOS @@@@@@@@@@@@@@@@@@@ */\\n\\n.ios ion-card-content {\\n  -webkit-padding-start: 0px;\\n          padding-inline-start: 0px;\\n  -webkit-padding-end: 0px;\\n          padding-inline-end: 0px;\\n}\\n\\n.ios #month {\\n  font-size: 13px;\\n  color: #00AAC7;\\n}\\n\\n.ios #day {\\n  font-size: 12px;\\n  color: #FF671D;\\n}\\n\\n.ios .h2-type {\\n  font-size: 14px;\\n}\\n\\n.ios .p-tokenid {\\n  font-size: 12px;\\n}\\n\\n.ios .amount-p {\\n  font-size: 14px;\\n}\\n\\n.ios .amount-h2 {\\n  font-size: 14px;\\n}\\n\\n/** @@@@@@@@@@@@@@@@@ Material Design @@@@@@@@@@@@@@@@@@@ */\\n\\n.md ion-card-content {\\n  -webkit-padding-start: 0px;\\n          padding-inline-start: 0px;\\n  -webkit-padding-end: 0px;\\n          padding-inline-end: 0px;\\n}\\n\\n.md #month {\\n  font-size: 14px;\\n  color: #00AAC7;\\n}\\n\\n.md #day {\\n  font-size: 12px;\\n  color: #FF671D;\\n}\\n\\n.md .h2-type {\\n  font-size: 14px;\\n}\\n\\n.md .p-tokenid {\\n  font-size: 12px;\\n}\\n\\n.md .amount-p {\\n  font-size: 14px;\\n}\\n\\n.md .amount-h2 {\\n  font-size: 14px;\\n}\\n\\n.md .seg {\\n  font-size: 12px;\\n}\\n\\n.no-activity-item {\\n  padding-left: 2%;\\n}\\n/*# sourceMappingURL=data:application/json;base64, */\"","import { MinimaApiService } from '../../service/minima-api.service';\nimport { PopoverController, IonSlides, ModalController, Platform } from '@ionic/angular';\nimport { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { HistoryService } from '../../service/history.service';\nimport { map } from 'rxjs/operators';\nimport { History } from '../../models/history.model';\nimport { HistorymodalPage } from '../../components/historymodal/historymodal.page';\nimport { HistorytokenmodalPage } from '../../components/historytokenmodal/historytokenmodal.page';\n\n@Component({\n  selector: 'app-history',\n  templateUrl: './history.page.html',\n  styleUrls: ['./history.page.scss'],\n})\nexport class HistoryPage implements OnInit {\n\n  isEmpty: boolean = true;\n  selectedSlide: any;\n  categories: number = 0;\n  ios: boolean = false;\n  sliderOptions = {\n    initialSlide: 0,\n    slidesPerView: 1.0,\n    slideShadows: true,\n    speed: 900\n  }\n  // + vars\n  public transactions: History[] = [];\n  public minimaTransactions: History[] = [];\n  public allTransactions: History[] = [];\n  public tokens: History[] = [];\n  public tokenTransactions: History[] = [];\n  public t_summarySpoof: History[] = [];\n\n  polledHistorySubscription: Subscription;\n\n  // - vars\n  private lastJSON: string = '';\n\n  constructor(private api: MinimaApiService, private historyService: HistoryService,\n     public modalController: ModalController, private platform: Platform) {}\n\n  ngOnInit() {\n    if(this.platform.is('ios') || this.platform.is('android')){\n      this.ios = true;\n    }\n  }\n\n  ionViewDidEnter(){ \n    this.pullInHistoryLength(); // get length for skeleton\n    \n    setTimeout(() => {\n      this.pullInHistorySummary(); // subscribe and polls history\n    }, 500);\n  }\n\n  ionViewDidLeave(){\n   this.polledHistorySubscription.unsubscribe();\n  }\n\n  /** Modals */\n  async presentModal(_txpowid: string, _amount: any,\n     _message: any, _block: number, _tokenid: string, _date: string, _isBlock: boolean,\n     _name: string, _address: string) {\n    const modal = await this.modalController.create({\n      component: HistorymodalPage,\n      componentProps: {\n        'TXPOW_ID': _txpowid,\n        'Amount': _amount,\n        'Message': _message,\n        'Block': _block,\n        'TokenID': _tokenid,\n        'Date': _date,\n        'isBlock': _isBlock,\n        'TokenName': _name,\n        'Address': _address\n      }\n    });\n    return await modal.present();\n  }\n  async presentTokenModal(_txpowid: string, _amount: any,\n    _message: any,  _block: number, _tokenid: string, _date: string, _isBlock: boolean,\n    _name: string, _tokenNameGiven: string, _amountCreated: string, _description) {\n   const modal = await this.modalController.create({\n     component: HistorytokenmodalPage,\n     componentProps: {\n       'TXPOW_ID': _txpowid,\n       'Amount': _amount,\n       'Message': _message,\n       'Block': _block,\n       'TokenID': _tokenid,\n       'Date': _date,\n       'isBlock': _isBlock,\n       'TokenName': _name,\n       'tokenNameGiven': _tokenNameGiven,\n       'amountCreated': _amountCreated,\n       'description': _description\n     }\n   });\n   return await modal.present();\n }\n\n\n  /** MISC Functions */\n  \n  getTXNType(amount: string) {\n    if(amount.substring(0,1) === \"-\"){\n      return \"arrow-round-back\";\n    } else {\n      return \"arrow-round-forward\";\n    }\n  }\n\n  //LATER USE, history order\n  getUserOrderPref() {\n    if(true){\n    return 't_summaryArr.slice().reverse()';\n    }\n  }\n\n  // Categories Segment\n  async segmentChanged(ev: Event, slides: IonSlides){\n    this.selectedSlide = slides;\n    await this.selectedSlide.slideTo(this.categories);\n  }\n  // Slide, after segment button clicked..\n  async slideChanged(slides: IonSlides){\n    this.selectedSlide = slides;\n    slides.getActiveIndex().then(selectedValue => {\n      this.categories = selectedValue;\n    });\n  \n  }\n\n  /** API CALLS */\n  // get length of history\n  pullInHistoryLength() {\n    this.historyService.getHistory().subscribe( (res: {status: boolean, minifunc: string, message: string, response: {history: History[]} })=> {\n      this.t_summarySpoof = res.response.history;\n      /** Check if we have any txn */\n      if(this.t_summarySpoof.length > 0) {\n        this.isEmpty = false;\n      }\n    });\n  }\n  \n  // Get all users activities+transactions history\n  pullInHistorySummary() {\n  this.polledHistorySubscription = this.historyService.getHistory().pipe(map(responseData => {\n    responseData.response.history.forEach((element: any)=> {\n      let name = element.values[0].name;\n\n      if(name.substring(0,1) === '{'){\n        element.values[0].name = JSON.parse(name);\n        this.transactions.push(element);\n        this.allTransactions.push(element);\n      } else if(name === 'Create Token'){\n        this.allTransactions.push(element);\n        this.tokens.push(element);\n      } else {\n        this.transactions.push(element);\n        this.allTransactions.push(element);\n\n      }\n\n    });\n  })).subscribe(responseData => {\n    \n    if(this.lastJSON !== JSON.stringify(responseData)){\n      //this.transactions = responseData;\n      this.lastJSON = JSON.stringify(responseData);\n    }\n\n  });\n    \n  }\n\n}\n","import { Tokens } from '../models/tokens.model';\nimport { environment } from './../../environments/environment.prod';\nimport { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { map, concatMap, merge } from 'rxjs/operators';\nimport { Observable, timer, Subject } from 'rxjs';\nimport { History } from '../models/history.model';\n\ndeclare var Minima: any;\n@Injectable({\n    providedIn: 'root'\n  })\nexport class HistoryService {\n\n  public polledHistory$: Observable<any>;\n  manualRefresh = new Subject();\n  private host = '';\n\n  constructor(private http: HttpClient) {\n      this.host = environment.defaultNode;\n      this.host = this.getHost();\n      }\n      \n  getHistory() {\n    return this.request('history');\n  }\n  \n  private getHost() {\n    if (localStorage.getItem('minima_host') == null) {\n      localStorage.setItem('minima_host', this.host);\n      return this.host;\n    } else {\n      return localStorage.getItem('minima_host');\n    }\n  }\n  \n  private request(route: any) {\n    // let apiUrl = this.host + route; // this.host+'route' = \"127.0.0.1:8999/'balance'\"\n    // let history$ = this.http.get(apiUrl);\n\n    const historyObservable = Observable.create(observer => {\n      Minima.cmd('history', function(res){\n        observer.next(res);\n      })\n      \n    });\n\n    let history$ = historyObservable;\n    \n    return this.polledHistory$ = timer(0, 2000).pipe(\n      \n      concatMap(_ => history$),\n      map((res: {status: boolean, minifunc: string, message: string, response: {history: History[]}}) => res)\n\n\n  );\n  }   \n}"],"sourceRoot":""}